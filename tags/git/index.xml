<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 临水轩志</title>
    <link>https://yumminhuang.github.io/tags/git/</link>
    <description>Recent content in Git on 临水轩志</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2018 ~ Yaming Huang</copyright>
    <lastBuildDate>Sat, 13 Feb 2016 16:36:21 -0500</lastBuildDate>
    
	<atom:link href="https://yumminhuang.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git 工作流</title>
      <link>https://yumminhuang.github.io/post/gitworkingflow/</link>
      <pubDate>Sat, 13 Feb 2016 16:36:21 -0500</pubDate>
      
      <guid>https://yumminhuang.github.io/post/gitworkingflow/</guid>
      <description>&lt;p&gt;Git 可能是每个开发者最常用的工具之一。Git 让开发团队更加方便地进行版本控制和多人协作。但是如果开发团队没有约定如何使用 Git 工作，很可能会导致工作变得一团糟。其中最大的问题是同时存在太多的开发中的分支，每个分支都包含了部分修改。最终开放团队很难弄清楚哪一个分支应该继续开发，或者把它发布成产品。&lt;/p&gt;

&lt;p&gt;正如编程过程中变量命名需要一套标准的命名规则（&lt;a href=&#34;https://en.wikipedia.org/wiki/Naming_convention_(programming)&#34;&gt;Naming convention&lt;/a&gt;）一样，开发团队在使用 Git 的时候，也需要一套标准的工作流，从而确保高效的开发、测试和部署。&lt;/p&gt;

&lt;p&gt;关于 Git 的工作流，业界已经有了很多讨论。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>