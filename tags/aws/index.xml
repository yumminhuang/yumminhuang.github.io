<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on 临水轩志</title>
    <link>https://yumminhuang.github.io/tags/aws/</link>
    <description>Recent content in Aws on 临水轩志</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2017 ~ Yaming Huang</copyright>
    <lastBuildDate>Sat, 02 Aug 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/aws/" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>在 AWS AutoScaling Group 中替换 Instance</title>
            <link>https://yumminhuang.github.io/post/replaceinstancesinautoscalinggroup/</link>
            <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
            
            <guid>https://yumminhuang.github.io/post/replaceinstancesinautoscalinggroup/</guid>
            <description>&lt;p&gt;这两周，我被分配的任务是实现 &lt;a href=&#34;http://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; 的 &lt;a href=&#34;http://aws.amazon.com/autoscaling/&#34;&gt;Auto Scaling&lt;/a&gt;功能。多亏有了 &lt;a href=&#34;https://github.com/boto/boto&#34;&gt;Boto&lt;/a&gt;， 很快就实现了创建 Auto Scaling Group 和添加 Scaling Policy。但是有一个问题却花费了一些时间才顺利解决。
&lt;/p&gt;

&lt;p&gt;我们的团队每周四发布新的代码。为了确保服务不中断，更新代码的步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;创建并配置（下载新发布的代码）多个新的 Instance；&lt;/li&gt;
&lt;li&gt;依次关闭旧的 Instance，每关闭一个 Instance，就激活（运行代码）一个新的 Instance 来替代被关闭的 Instance。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这样可以保证在 AWS 上运行的 Instance 依次得到更新，并且服务没有中断。&lt;/p&gt;

&lt;p&gt;现在的问题是：使用了 Auto Scaling 之后，每次尝试改变 Auto Scaling Group 当中的 Instance 数目，都会激发 Scaling Policy。比如我想关闭一个旧的 Instance，这样 Auto Scaling Group 当中 Instance 的数量就会小于 Desired Capacity，Auto Scaling Group 就会新创建一个 Instance， 而不是等我激活一个 Instance 去替代。&lt;/p&gt;

&lt;p&gt;我想到的办法步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将 Auto Scaling Group 挂起（避免激发 Scaling Policy）；&lt;/li&gt;
&lt;li&gt;按照以前的方法替换旧的 Instance；&lt;/li&gt;
&lt;li&gt;将新创建的 Instance 添加到 Auto Scaling Group。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;因为 AWS Auto Scaling 的特性（比如 Auto Scaling Group 被挂起的时候不能够添加 Instance，&lt;code&gt;desired_capacity&lt;/code&gt; 不能小于 &lt;code&gt;min_size&lt;/code&gt;），实现第三步并不容易。具体来说第三步又要分成下面几个步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将 Auto Scaling Group 的 &lt;code&gt;desired_capacity&lt;/code&gt; 和 &lt;code&gt;min_size&lt;/code&gt; 分别置为 &lt;code&gt;0&lt;/code&gt;（防止恢复 Auto Scaling Group 的时候自动创建 Instance）；&lt;/li&gt;
&lt;li&gt;恢复 Auto Scaling Group（结束挂起状态，然后才可以添加 Instance）；&lt;/li&gt;
&lt;li&gt;添加 Instance 到 Auto Scaling Group 里；&lt;/li&gt;
&lt;li&gt;恢复 Auto Scaling Group 的 &lt;code&gt;min_size&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面提供一份示例代码以供参考：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;s1770&#34;&gt;#!python&lt;/span&gt;
&lt;span class=&#34;s3e8&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s7dd&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;s3e8&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s7dd&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;s3e8&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s7dd&#34;&gt;boto.ec2.autoscale&lt;/span&gt; &lt;span class=&#34;s3e8&#34;&gt;import&lt;/span&gt; AutoScaleConnection
&lt;span class=&#34;s3e8&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s7dd&#34;&gt;boto.ec2.connection&lt;/span&gt; &lt;span class=&#34;s3e8&#34;&gt;import&lt;/span&gt; EC2Connection

AUTO_SCALING_GROUP &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;test_auto_scaling_group&amp;#34;&lt;/span&gt;
NEW_INSTANCES &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; [&lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;i-4acb0666&amp;#34;&lt;/span&gt;, &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;i-4acbqa9&amp;#34;&lt;/span&gt;]
CHECK_INTERVAL &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc80&#34;&gt;5&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;suspend&lt;/span&gt;(as_conn):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Suspend auto scaling group
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;suspend_processes(AUTO_SCALING_GROUP)
    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Suspend Done&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;resume&lt;/span&gt;(as_conn):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Resume auto scaling group
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;resume_processes(AUTO_SCALING_GROUP)
    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Resume Done&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;get_instance_by_id&lt;/span&gt;(ec2conn, inst_id):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Get instance by its id
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;sfa0&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;s3e8&#34;&gt;pass&lt;/span&gt;

&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;deactivate_instance&lt;/span&gt;(inst):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Deactivate instance
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;sfa0&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;s3e8&#34;&gt;pass&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;delete_instances&lt;/span&gt;(as_conn, ec2conn):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Delete instances in auto scaling group
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    as_group &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;get_all_groups(names&lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt;[AUTO_SCALING_GROUP])[&lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;]
    instances &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; [get_instance_by_id(ec2conn, i&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;instance_id) &lt;span class=&#34;s3e8&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;sfa1&#34;&gt;in&lt;/span&gt; as_group&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;instances]
    &lt;span class=&#34;s3e8&#34;&gt;for&lt;/span&gt; instance &lt;span class=&#34;sfa1&#34;&gt;in&lt;/span&gt; instances:
        &lt;span class=&#34;s3e8&#34;&gt;if&lt;/span&gt; instance&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;state &lt;span class=&#34;sfa0&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;terminated&amp;#34;&lt;/span&gt;:
            &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;*** Terminate Instance &lt;/span&gt;&lt;span class=&#34;sc27&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;sfa0&#34;&gt;%&lt;/span&gt; instance&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s7d2&#34;&gt;id&lt;/span&gt;
            deactivate_instance(instance)
    &lt;span class=&#34;s1770&#34;&gt;# All instances should be terminated&lt;/span&gt;
    &lt;span class=&#34;s3e8&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;s7d2&#34;&gt;any&lt;/span&gt;([inst&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;update() &lt;span class=&#34;sfa0&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;terminated&amp;#34;&lt;/span&gt; &lt;span class=&#34;s3e8&#34;&gt;for&lt;/span&gt; inst &lt;span class=&#34;sfa1&#34;&gt;in&lt;/span&gt; instances]):
        sys&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;stdout&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;write(&lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;)
        sys&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;stdout&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;flush()
        time&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;sleep(CHECK_INTERVAL)
    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;.&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;Delete Done&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;attach_instances&lt;/span&gt;(as_conn):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Attach instances into auto scaling group
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s3e8&#34;&gt;while&lt;/span&gt; True &lt;span class=&#34;sfa1&#34;&gt;and&lt;/span&gt; NEW_INSTANCES:
        as_group &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;get_all_groups(names&lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt;[AUTO_SCALING_GROUP])[&lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;]
        &lt;span class=&#34;s3e8&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s7d2&#34;&gt;len&lt;/span&gt;(as_group&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;instances) &lt;span class=&#34;sfa0&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;:
            as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;attach_instances(AUTO_SCALING_GROUP, NEW_INSTANCES)
            &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Attach Done&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt;
            &lt;span class=&#34;s3e8&#34;&gt;return&lt;/span&gt;
        &lt;span class=&#34;s3e8&#34;&gt;else&lt;/span&gt;:
            &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;There are instances still in the group&amp;#34;&lt;/span&gt;
            time&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;sleep(CHECK_INTERVAL)


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;set_capacity&lt;/span&gt;(as_conn):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Set desired capacity and minimum size as 0
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    as_group &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;get_all_groups(names&lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt;[AUTO_SCALING_GROUP])[&lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;]
    as_group&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;min_size &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;
    as_group&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;desired_capacity &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;
    as_group&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;update()
    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Set Capacity Done&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;resume_capacity&lt;/span&gt;(as_conn):
    &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    Resume minimum size as the original value
&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    as_group &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; as_conn&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;get_all_groups(names&lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt;[AUTO_SCALING_GROUP])[&lt;span class=&#34;sc80&#34;&gt;0&lt;/span&gt;]
    &lt;span class=&#34;s7d2&#34;&gt;setattr&lt;/span&gt;(as_group,&lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;min_size&amp;#34;&lt;/span&gt;, &lt;span class=&#34;sc80&#34;&gt;1&lt;/span&gt;)
    as_group&lt;span class=&#34;sfa0&#34;&gt;.&lt;/span&gt;update()
    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Resume Capacity Done&lt;/span&gt;&lt;span class=&#34;sc25&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;&lt;/span&gt;


&lt;span class=&#34;s3e8&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;s7d9&#34;&gt;main&lt;/span&gt;():
    as_conn &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; AutoScaleConnection()
    ec2conn &lt;span class=&#34;sfa0&#34;&gt;=&lt;/span&gt; EC2Connection()

    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Suspend Auto Scaling Group&amp;#34;&lt;/span&gt;
    suspend(as_conn)

    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Delete Instances&amp;#34;&lt;/span&gt;
    delete_instances(as_conn, ec2conn)

    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Set Capacity&amp;#34;&lt;/span&gt;
    set_capacity(as_conn)

    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Resume Auto Scaling Group&amp;#34;&lt;/span&gt;
    resume(as_conn)

    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Attach Instances&amp;#34;&lt;/span&gt;
    attach_instances(as_conn)

    &lt;span class=&#34;s3e8&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;Resume Capacity&amp;#34;&lt;/span&gt;
    resume_capacity(as_conn)


&lt;span class=&#34;s3e8&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;sfa0&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;sc1c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sc1c&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    main()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</description>
          </item>
        
      
    
  </channel>
</rss>
