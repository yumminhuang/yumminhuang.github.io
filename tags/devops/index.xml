<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on 临水轩志</title>
    <link>https://yumminhuang.github.io/tags/devops/</link>
    <description>Recent content in Devops on 临水轩志</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2018 ~ Yaming Huang</copyright>
    <lastBuildDate>Sat, 05 Mar 2016 17:29:12 -0500</lastBuildDate>
    
	<atom:link href="https://yumminhuang.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>持续集成交付部署</title>
      <link>https://yumminhuang.github.io/post/ci/</link>
      <pubDate>Sat, 05 Mar 2016 17:29:12 -0500</pubDate>
      
      <guid>https://yumminhuang.github.io/post/ci/</guid>
      <description>&lt;p&gt;最近看了一篇文章 &lt;a href=&#34;http://www.mindtheproduct.com/2016/02/what-the-hell-are-ci-cd-and-devops-a-cheatsheet-for-the-rest-of-us/&#34;&gt;&lt;em&gt;The Product Managers’ Guide to Continuous Delivery and DevOps&lt;/em&gt;&lt;/a&gt;。
文中对「持续集成（ &lt;em&gt;Continuous Integration&lt;/em&gt; ）」、「持续交付（ &lt;em&gt;Continuous Delivery&lt;/em&gt; ）」和「持续部署（ &lt;em&gt;Continuous Deployment&lt;/em&gt; ）」这三个概念有很详细的解释。这里借用文中的插图，说一下我对这三个概念的理解。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Travis CI</title>
      <link>https://yumminhuang.github.io/post/travisci/</link>
      <pubDate>Sat, 20 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/travisci/</guid>
      <description>&lt;p&gt;本文将主要介绍如何使用 &lt;a href=&#34;https://travis-ci.org&#34;&gt;Travis CI&lt;/a&gt; 托管 Github 上的开源项目，从而实现自动化测试、部署。同时，还将介绍使用 &lt;a href=&#34;https://coveralls.io/&#34;&gt;Coveralls&lt;/a&gt; 来监测测试覆盖率。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins 简介</title>
      <link>https://yumminhuang.github.io/post/jenkins/</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/jenkins/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://yumminhuang.github.io/post/PythonTestCoveragewithJenkins/&#34;&gt;之前的一篇文章中&lt;/a&gt;，曾经提及过 Jenkins。在本次实习中，Jenkins 是我每天都要使用的工具。在频繁的使用过程当中：通过实际工作感受了「持续集成」的概念（关于持续集成的概念，此处按下不表，待有时间的时候再详细总结。）；逐渐熟悉了 Jenkins 的使用，并且体会到其带来的方便。因此，希望总结一下 Jenkins 的使用。&lt;/p&gt;

&lt;p&gt;然而 Jenkins 不通过具体的案例难以体会其方便之处，网上相关使用说明之类的文章又颇多，所以本文仅谈个人使用中的体会，并非学习Jenkins使用的教程。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于 Jenkins 的 Python 代码集成整合</title>
      <link>https://yumminhuang.github.io/post/pythontestcoveragewithjenkins/</link>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/pythontestcoveragewithjenkins/</guid>
      <description>&lt;p&gt;实习中最近做了一个多月的项目是将代码测试覆盖率整合到公司持续整合（Continuous Integration）的流程当中。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 Fabric 进行远程操作</title>
      <link>https://yumminhuang.github.io/post/remotecommandsviafabric/</link>
      <pubDate>Thu, 16 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/remotecommandsviafabric/</guid>
      <description>&lt;h2 id=&#34;fabric-简介&#34;&gt;Fabric 简介&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.fabfile.org&#34;&gt;Fabric&lt;/a&gt; 是一个实现远程操作和部署的 Python 模块。Fabric 主要用来作为 SSH 的替代，实现一些简单的应用部署和系统管理。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Graphite 和 Grafana 简介</title>
      <link>https://yumminhuang.github.io/post/graphiteandgrafana/</link>
      <pubDate>Wed, 08 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/graphiteandgrafana/</guid>
      <description>&lt;h2 id=&#34;graphite&#34;&gt;Graphite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://graphite.wikidot.com/start&#34;&gt;Graphite&lt;/a&gt; 是一款开源的监控绘图工具。&lt;/p&gt;

&lt;p&gt;Graphite 可以实时收集、存储、显示时间序列类型的数据（time series data）。它主要有三个部分构成：
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensu 简介</title>
      <link>https://yumminhuang.github.io/post/sensu/</link>
      <pubDate>Sat, 04 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/sensu/</guid>
      <description>&lt;h2 id=&#34;sensu-简介&#34;&gt;Sensu 简介&lt;/h2&gt;

&lt;p&gt;Sensu 是一款开源的监控框架。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>3 个月运维工作之总结</title>
      <link>https://yumminhuang.github.io/post/threemonthesofoperationwork/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/threemonthesofoperationwork/</guid>
      <description>&lt;p&gt;自从 1 月 5 日开始实习至今，在 Operation Team 已经工作了三个月。我觉得有必要对工作进行一下总结。既是我对三个月来所学新知识的归纳，也是对运维工作的一些思考。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 VPS 搭建 VPN 服务器</title>
      <link>https://yumminhuang.github.io/post/buildvpnonvps/</link>
      <pubDate>Mon, 16 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/buildvpnonvps/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;从来就没有什么救世主&lt;/p&gt;

&lt;p&gt;也不靠神仙皇帝&lt;/p&gt;

&lt;p&gt;要创造人类的幸福&lt;/p&gt;

&lt;p&gt;全靠我们自己&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 AWS AutoScaling Group 中替换 Instance</title>
      <link>https://yumminhuang.github.io/post/replaceinstancesinautoscalinggroup/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://yumminhuang.github.io/post/replaceinstancesinautoscalinggroup/</guid>
      <description>&lt;p&gt;这两周，我被分配的任务是实现 &lt;a href=&#34;http://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; 的 &lt;a href=&#34;http://aws.amazon.com/autoscaling/&#34;&gt;Auto Scaling&lt;/a&gt;功能。多亏有了 &lt;a href=&#34;https://github.com/boto/boto&#34;&gt;Boto&lt;/a&gt;， 很快就实现了创建 Auto Scaling Group 和添加 Scaling Policy。但是有一个问题却花费了一些时间才顺利解决。
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>