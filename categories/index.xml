<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>临水轩志</title>
    <link>https://yumminhuang.github.io/categories/</link>
    <description>Recent content on 临水轩志</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>2017 ~ Yaming Huang</copyright>
    <lastBuildDate>Tue, 02 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/" rel="self" type="application/rss+xml" />
    
      
        
          <item>
            <title>Jenkins 简介</title>
            <link>https://yumminhuang.github.io/post/jenkins/</link>
            <pubDate>Tue, 02 Jun 2015 00:00:00 +0000</pubDate>
            
            <guid>https://yumminhuang.github.io/post/jenkins/</guid>
            <description>&lt;p&gt;在&lt;a href=&#34;https://yumminhuang.github.io/post/PythonTestCoveragewithJenkins/&#34;&gt;之前的一篇文章中&lt;/a&gt;，曾经提及过 Jenkins。在本次实习中，Jenkins 是我每天都要使用的工具。在频繁的使用过程当中：通过实际工作感受了「持续集成」的概念（关于持续集成的概念，此处按下不表，待有时间的时候再详细总结。）；逐渐熟悉了 Jenkins 的使用，并且体会到其带来的方便。因此，希望总结一下 Jenkins 的使用。&lt;/p&gt;

&lt;p&gt;然而 Jenkins 不通过具体的案例难以体会其方便之处，网上相关使用说明之类的文章又颇多，所以本文仅谈个人使用中的体会，并非学习Jenkins使用的教程。
&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;jenkins是什么&#34;&gt;Jenkins是什么&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; 是一个用 Java 编写的开源的&lt;ruby&gt;持续&lt;rt&gt;Continuous&lt;/rt&gt;&lt;/ruby&gt; &lt;ruby&gt;集成&lt;rt&gt;Integration&lt;/rt&gt;&lt;/ruby&gt;工具。&lt;/p&gt;

&lt;p&gt;Jenkins 是用 Java 开发的（界面和 Eclipse一样，带着一股浓浓的 SWT 的味道，好在界面并不太影响使用。），对 Java 程序开发有天然的良好支持，如 JUnit/TestNG 测试，Maven、Ant 等 Java 开发中常用的工具都包含在 Jenkins 里。当然，Jenkins 也可以通过插件来实现其它语言的开发。&lt;/p&gt;

&lt;h3 id=&#34;jenkins的特性&#34;&gt;Jenkins的特性&lt;/h3&gt;

&lt;p&gt;在使用的过程中，我体会比较深刻的特性有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;项目易于配置&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在 Jenkins 当中，我们可以新建 Job。在 Job 里，可以设置添加&lt;ruby&gt;构建脚本&lt;rt&gt;Build Script&lt;/rt&gt;&lt;/ruby&gt;。构建脚本支持 Bash、Ant、Makefile；Job 的参数、&lt;ruby&gt;元&lt;rt&gt;Meta&lt;/rt&gt;&lt;/ruby&gt;数据可以作为环境变量在脚本里直接使用，因此设置起来非常方便。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;种类繁多的插件&lt;/strong&gt;（这点也和 Eclipse 也颇为相似）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jenkins 的开发者社区非常活跃，&lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Plugins&#34;&gt;第三方插件&lt;/a&gt;很多，从而可以帮助我们实现很多常用的功能。
比如，Hipchat 插件可以在 Job 运行结束后把结果发送到 Hipchat 的聊天室里；Cobertura 插件可以显示测试覆盖率的数据。&lt;/p&gt;

&lt;h3 id=&#34;jenkins的使用场景&#34;&gt;Jenkins的使用场景&lt;/h3&gt;

&lt;p&gt;在我们公司，Jenkins 主要被用来用于：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;ruby&gt;构建&lt;rt&gt;Build&lt;/rt&gt;&lt;/ruby&gt;、&lt;ruby&gt;测试&lt;rt&gt;Test&lt;/rt&gt;&lt;/ruby&gt;、&lt;ruby&gt;部署&lt;rt&gt;Deploy&lt;/rt&gt;&lt;/ruby&gt;代码&lt;/strong&gt;；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们可以通过一个 Job 实现以下流程：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用 Git 插件，从代码库下载任一版本或分支的源代码；&lt;/li&gt;
&lt;li&gt;编译代码；&lt;/li&gt;
&lt;li&gt;运行测试。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;或者是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;启动若干个 EC2 实例；&lt;/li&gt;
&lt;li&gt;将任一版本的代码部署到新建的实例上。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所有的这些流程在 Jenkins 里，都只需要设置几个简单的参数（如分支的名称，或者是实例的个数），再点击运行按钮就可以了。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自动化一些复杂的流程，如数据库的迁移、备份，系统更新的安装等等&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有一些常用，但是流程很复杂的过程，可以在 Jenkins 里通过 Job 来完成。&lt;/p&gt;</description>
          </item>
        
      
    
  </channel>
</rss>
